services:
  postgres:
    container_name: postgres
    image: postgres:16.2
    ports:
      - 5432:5432
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - ./postgres/init:/docker-entrypoint-initdb.d
      - ./postgres/data:/var/lib/postgresql/data
    restart: always
    networks:
      - song-la
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h postgres -p 5432 -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    container_name: backend
    build: 
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - 9527:8000
    environment:
      DATABASE_URL: ${DATABASE_URL}
      KKBOX_CLIENT_ID: ${KKBOX_CLIENT_ID}
      KKBOX_CLIENT_SECRET: ${KKBOX_CLIENT_SECRET}
      YTMUSIC_CLIENT_ID: ${YTMUSIC_CLIENT_ID}
      YTMUSIC_CLIENT_SECRET: ${YTMUSIC_CLIENT_SECRET}
    restart: always
    networks:
      - song-la
    depends_on:
      postgres:
        condition: service_healthy

networks:
  song-la:
    name: song-la-network
    driver: bridge
